根据表格动态添加  
  
	if(data!=null&&data!="0"){  
	yisao++;  
	document.getElementById("yisao").innerHTML=yisao+"";  
	$("#rows").append("<tr><td colspan='2' valign='bottom' style='padding-top: 1em;border: 0px;color:#666666'>【箱码】"+result+"</td><td rowspan='2' style='color:blue;'>已扫</td></tr><tr><td colspan='2' style='padding-bottom: 1em;color:#666666'>"+data+"</td></tr>");   
	}else{  
	shixiao++;  
	document.getElementById("shixiao").innerHTML=shixiao+"";  
	$("#rows").append("<tr><td colspan='2' style='padding-bottom: 1em;padding-top: 1em;color:#666666'>【箱码】"+result+"</td><td style='color:red;'>无效</td></tr>");   
	}  
getJson的使用  
	
	function initChannel(){  
	$.getJSON("./file/1",function(result){  
	alert(result.name);  
	$.each(result.tv_list, function(i, field){  
	//$("p").append(field + " ");  
		alert(field.title);  
	});  
	});  
	}  
	
如果不是用result.tv_list，field就是一个数组。  
   
   ajax或者getJson遇到for循环需要闭包，原因是异步操作会慢于for循环   
   
   
   var title, i;  
   for (i = 0; i < some_array.length; i += 1) {  
   title = some_array[i];  
   $.getJSON(  
	'some.url/' + title,  
	(function(thisi) {  
	return function(data) {  
	do_something_with_data(data, thisi);  
	// create a new closure on the parameter thisi  
	// which will hold the correct value at invocation time  
	};  
   }(i)); // calling the function with the current value  
}  

